<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="init()" 
		 width="300" height="120">
	
	<fx:Script>
		<![CDATA[			
			import mx.core.UIComponent;
			
			import planner.Predecessor;
			import planner.Task;
			
			import utils.Global;
			import utils.Seating;
			import utils.methods.dateToString;
			
			private var _task:Task
			
			public var startPoint:Point = new Point()
			public var endPoint:Point = new Point()
				
			public var cm:ContextMenu = new ContextMenu()
			
			protected function init():void{
				refresh()
				addEventListener(MouseEvent.MOUSE_DOWN, mDown)
				
				cm.customItems.push(task.infoMenuItem)
					
				if (Seating.editor){
					cm.customItems.push(task.insertTaskItem);
					cm.customItems.push(task.unlinkMenuItem);
					cm.customItems.push(task.editMenuItem);
					cm.customItems.push(task.deleteMenuItem);
				}
				
				cm.customItems.push(Global.resourcesItem)
				cm.customItems.push(Global.projectItem)
					
				cm.hideBuiltInItems()
				contextMenu = cm
			}
			
			
			private function mMove(ev:MouseEvent):void{
				refreshPredecessorArrow()
			}
			
			private function mDown(ev:MouseEvent):void{
				Global.tasksContainer.addElement(this)
				startDrag()
				addEventListener(MouseEvent.MOUSE_MOVE, mMove)
				addEventListener(MouseEvent.MOUSE_UP, mUp)
			}
			
			private function mUp(ev:MouseEvent):void{
				stopDrag()
				removeEventListener(MouseEvent.MOUSE_MOVE, mMove)
			}
			
			public function get task():Task{
				return _task;
			}

			public function set task(t:Task):void{
				_task = t;
				backRect.graphics.beginFill(0xcccccc);
				backRect.graphics.lineStyle(2,0x000000);
				if (task.isMilestone()){
					backRect.graphics.moveTo(60,20);
					backRect.graphics.lineTo(240,20);
					backRect.graphics.lineTo(250,60);
					backRect.graphics.lineTo(240,100);
					backRect.graphics.lineTo(60,100);
					backRect.graphics.lineTo(50,60);
					if (task.percent_complete > 0){
						backRect.graphics.moveTo(60,20);
						backRect.graphics.lineTo(240,100);
					}					
					if (task.percent_complete == 100){
						backRect.graphics.moveTo(240,20);
						backRect.graphics.lineTo(60,100);
					}					
				}else if (task.isParent()){
					backRect.graphics.moveTo(60,20);
					backRect.graphics.lineTo(250,20);
					backRect.graphics.lineTo(240,100);
					backRect.graphics.lineTo(50,100);
					if (task.percent_complete > 0){
						backRect.graphics.moveTo(60,20);
						backRect.graphics.lineTo(240,100);
					}					
					if (task.percent_complete == 100){
						backRect.graphics.moveTo(250,20);
						backRect.graphics.lineTo(50,100);
					}					
				}else{
					if (Task.criticPath.indexOf(t) != -1){
						backRect.graphics.lineStyle(2,0xff0000);
					}else{
						backRect.graphics.lineStyle(2,0x0000ff);
					}
					backRect.graphics.beginFill(0xddddff);
					backRect.graphics.drawRect(50,20,200,80);
					
					if (task.percent_complete > 0){
						backRect.graphics.moveTo(50,20);
						backRect.graphics.lineTo(250,100);
					}					
					if (task.percent_complete == 100){
						backRect.graphics.moveTo(250,20);
						backRect.graphics.lineTo(50,100);
					}					
				}
				
				x = task.parentLevel*260
				y = task.index*120
					
				refreshPredecessorArrow()
			}
			
			public function refresh():void{
				taskName.text = task.wbsName
				duration.text = "duration: " + task.workColumn
				start.text = "start: " + dateToString(task.start)
				end.text = "finish: " + dateToString(task.end)
			}
			
			private function refreshPredecessorArrow():void{
				startPoint.x = x
				startPoint.y = y + 60
				endPoint.x = x
				endPoint.y = y + 60
				if (task.isMilestone()){
					startPoint.x += 250
					endPoint.x += 50
				}else if (task.isParent()){
					startPoint.x += 245
					endPoint.x += 55
				}else{
					startPoint.x += 250
					endPoint.x += 50
				}
				
				var pred:Predecessor;
				task.predecessors.refresh();
				for each(pred in task.predecessors){
					pred.arrow.refresh();
				}
				
				for each(var t:Task in task.childPredecessors()){
					for each(pred in t.predecessors){
						pred.arrow.refresh()
					}
				}
				
				if (task.arrow){
					task.arrow.refresh()
				}
				
				for each(var ch:Task in task.subTasks){
					ch.arrow.refresh()
				}
				
			}
			
		]]>
	</fx:Script>
	<mx:UIComponent id="backRect"/>
	<s:Group id="taskInfoBox" x="60" y="20"
			width="180" height="80">
		<mx:Label id="taskName" x="5" width="152" y="3" fontWeight="bold" fontSize="10"/>
		<mx:Label id="duration" x="17" width="104" y="28" fontSize="10"/>
		<mx:Label id="start" x="17" width="104" y="42" fontSize="10"/>
		<mx:Label id="end" x="17" width="104" y="56" fontSize="10"/>
		<mx:Image x="124" y="39" 
				  source="@Embed('assets/img/edit_ico-24x24.png')" 
				  useHandCursor="true" buttonMode="true"
				  visible="{Seating.editor}"
				  click="Global.openPage(task.editPage)"/>
		<mx:Image x="154" y="37" 
				  useHandCursor="true"
				  buttonMode="true"
				  source="@Embed('assets/img/info_icon.png')" 
				  click="Global.openPage(task.infoPage)"/>
	</s:Group>
	
</s:Group>
